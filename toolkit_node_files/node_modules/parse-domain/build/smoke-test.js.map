{"version":3,"file":"smoke-test.js","sourceRoot":"","sources":["../src/smoke-test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,QAAQ,CAAC;AACzC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,WAAW,CAAC;AAElE,MAAM,CAAC,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,eAAe,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE;QAC9C,QAAQ,EAAE,iBAAiB;QAC3B,IAAI,EAAE,eAAe,CAAC,MAAM;QAC5B,MAAM,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC;QACjC,UAAU,EAAE,CAAC,KAAK,CAAC;QACnB,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,CAAC,KAAK,CAAC;QACxB,KAAK,EAAE;YACL,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,SAAS;YACjB,eAAe,EAAE,CAAC,KAAK,CAAC;SACzB;KACF,CAAC,CAAC;IACH,eAAe,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE;QAChD,QAAQ,EAAE,mBAAmB;QAC7B,IAAI,EAAE,eAAe,CAAC,MAAM;QAC5B,MAAM,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC;QACtC,UAAU,EAAE,CAAC,KAAK,CAAC;QACnB,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;QAC7B,KAAK,EAAE;YACL,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,SAAS;YACjB,eAAe,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;SAC9B;KACF,CAAC,CAAC;IACH,eAAe,CAAC,WAAW,CAAC,4BAA4B,CAAC,EAAE;QACzD,QAAQ,EAAE,4BAA4B;QACtC,IAAI,EAAE,eAAe,CAAC,MAAM;QAC5B,MAAM,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,CAAC;QAC/C,UAAU,EAAE,CAAC,KAAK,CAAC;QACnB,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,CAAC,YAAY,EAAE,KAAK,CAAC;QACtC,KAAK,EAAE;YACL,UAAU,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;YAC9B,MAAM,EAAE,YAAY;YACpB,eAAe,EAAE,CAAC,KAAK,CAAC;SACzB;KACF,CAAC,CAAC;IACH,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAE;QACpD,QAAQ,EAAE,+BAA+B;QACzC,IAAI,EAAE,eAAe,CAAC,MAAM;QAC5B,MAAM,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,YAAY,EAAE,IAAI,CAAC;QAClD,UAAU,EAAE,CAAC,KAAK,CAAC;QACnB,MAAM,EAAE,aAAa;QACrB,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC;QACrC,KAAK,EAAE;YACL,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,aAAa;YACrB,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC;SACtC;KACF,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { deepStrictEqual } from \"assert\";\nimport { fromUrl, parseDomain, ParseResultType } from \"./main.js\";\n\nexport const runSmokeTest = () => {\n  deepStrictEqual(parseDomain(\"www.example.com\"), {\n    hostname: \"www.example.com\",\n    type: ParseResultType.Listed,\n    labels: [\"www\", \"example\", \"com\"],\n    subDomains: [\"www\"],\n    domain: \"example\",\n    topLevelDomains: [\"com\"],\n    icann: {\n      subDomains: [\"www\"],\n      domain: \"example\",\n      topLevelDomains: [\"com\"],\n    },\n  });\n  deepStrictEqual(parseDomain(\"www.example.co.uk\"), {\n    hostname: \"www.example.co.uk\",\n    type: ParseResultType.Listed,\n    labels: [\"www\", \"example\", \"co\", \"uk\"],\n    subDomains: [\"www\"],\n    domain: \"example\",\n    topLevelDomains: [\"co\", \"uk\"],\n    icann: {\n      subDomains: [\"www\"],\n      domain: \"example\",\n      topLevelDomains: [\"co\", \"uk\"],\n    },\n  });\n  deepStrictEqual(parseDomain(\"www.example.cloudfront.net\"), {\n    hostname: \"www.example.cloudfront.net\",\n    type: ParseResultType.Listed,\n    labels: [\"www\", \"example\", \"cloudfront\", \"net\"],\n    subDomains: [\"www\"],\n    domain: \"example\",\n    topLevelDomains: [\"cloudfront\", \"net\"],\n    icann: {\n      subDomains: [\"www\", \"example\"],\n      domain: \"cloudfront\",\n      topLevelDomains: [\"net\"],\n    },\n  });\n  deepStrictEqual(parseDomain(fromUrl(\"www.食狮.公司.cn\")), {\n    hostname: \"www.xn--85x722f.xn--55qx5d.cn\",\n    type: ParseResultType.Listed,\n    labels: [\"www\", \"xn--85x722f\", \"xn--55qx5d\", \"cn\"],\n    subDomains: [\"www\"],\n    domain: \"xn--85x722f\",\n    topLevelDomains: [\"xn--55qx5d\", \"cn\"],\n    icann: {\n      subDomains: [\"www\"],\n      domain: \"xn--85x722f\",\n      topLevelDomains: [\"xn--55qx5d\", \"cn\"],\n    },\n  });\n};\n"]}